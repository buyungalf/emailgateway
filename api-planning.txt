Planing API

{root.api}/{subdomain}/{version}/{groupping}/{endpoint}

SAMPLE:
http://rapidcarreer.com/{subdomain}

subdomain: 
emailgateway

contoh:
http://rapidcarreer.com/emailgateway/v1/auth/login

Status response
200 - OK                        
201 - CREATE                    
400 - BAD REQUEST
401 - UNAUTHORIZED
403 - FORBIDDEN
404 - NOT FOUND
500 - INTERNAL SERVER ERROR
502 - BAD GATEWAY

GROUP : Authentication

before:

[1] home
{root.api}/

[2] - login authorize with microsoft acount
{root.api}/authorize

[3] - login loginComplete
{root.api}/logincomplete

[4] - refresh_token
{root.api}/refreshtokens

[5] - logout
{root.api}/logout


revisi:
[1] home login -> yoga follow up
{root.api}/{subdomain}/{version}/

res: 
{
    title: "home login",
    url: " https://login.microsoftonline.com/common/oauth2/v2.0/authorize+....   "
}
codeStatusResponse : 200 OK


[2] - login authorize with microsoft acount
{root.api}/{subdomain}/{version}/authorize

req :
{
    code = "...query"
}

res:
{
    "Retrieved auth code in /authorize: " + code
}
codeStatusResponse : 200 OK

if success
redirect : {root.api}/{subdomain}/{version}/dashboard

if fail:
err-response : 400-input yang dimasukkan tidak valid
redirect : {root.api}/{subdomain}/{version}/


[3] - logout 
{root.api}/{subdomain}/{version}/logout
res: 
codeStatusResponse : 200 OK
{root.api}/{subdomain}/{version}/


GROUP : Mailbox
before
[1] mailbox 
{root.api}/home


revisi : 
[1] dashboard
{root.api}/{subdomain}/{version}/dashboard
res : 
{
    username: username,
    mailboxHistory: [
        {
            email: email,
            status: status
        }     
    ],
    mailboxContact: [
        {
            name: contact.name,
            company: company.name,
            emailAddress: contact.email
        }
    ]
}
codeStatusResponse : 200 OK

if fail:
err response : 404 - NOT FOUND


[2] Send Email 
{root.api}/{subdomain}/{version}/send-email

Button send-email
req:{
    to: {
        individualEmail: contact.email,
        groupEmail : [
            email1: contact.email,
            email2: contact.email,
            email2: contact.email
        ]
    },
    cc: {
        individualEmail: contact.email,
        groupEmail : [
            email1: contact.email,
            email2: contact.email,
            email2: contact.email
        ]
    },
    Subject: ".. ",
    Body: "text",
    Schedule: {
        date : "yyyy-MM-dd", 
        time : "HH:mm:ss"    
    }
}
res: {
    redirect: "{root.api}/{subdomain}/{version}/dashboard",
    { 
        msg: "Email sent",
        info: info.response,
    }),
}
codeStatusResponse : 200 OK

if fail:
err.response : 500 error.message

[3] company
{root.api}/{subdomain}/{version}/company/

req: {
    name: company.name,
    address: company.address
}

res: {
    data : [
       {
        id: 1,
        name: company.name,
        address: company.address
        } 
    ]
}
codeStatusResponse : 200 OK

if fail:
err.response : 500 error.message

CREATE      --> POST{root.api}/{subdomain}/{version}/company/
READ        --> GET {root.api}/{subdomain}/{version}/company/
READById    --> GET {root.api}/{subdomain}/{version}/company/id
UPDATE      --> GET{root.api}/{subdomain}/{version}/company/update/id
                POST{root.api}/{subdomain}/{version}/company/update/id
DELETE      --> GET{root.api}/{subdomain}/{version}/company/delete/id

[4] contact
{root.api}/{subdomain}/{version}/company/
CRUD
req: {
    company_id: 1,
    name: " ",
    gender: [enum],
    email: "employee@company.com",
    type: [enum]
}

res: {
    data: [
        {
            id: 1,
            company_id: 1,
            name: " ",
            gender: [enum],
            email: "employee@company.com",
            type: [enum]
        }
    ]
}
codeStatusResponse : 200 OK

if fail:
err.response : 500 error.message

CREATE          --> POST{root.api}/{subdomain}/{version}/contact/
READ            --> GET {root.api}/{subdomain}/{version}/contact/
READById        --> GET {root.api}/{subdomain}/{version}/contact/id
ReadByCompany   --> GET {root.api}/{subdomain}/{version}/contact/company/company_id
UPDATE          --> GET{root.api}/{subdomain}/{version}/contact/update/id
                    POST{root.api}/{subdomain}/{version}/contact/update/id
DELETE          --> GET{root.api}/{subdomain}/{version}/contact/delete/id


Import excels:
CREATE          --> POST{root.api}/{subdomain}/{version}/contact/import
req: {
    company: [
        {
            name: " ",
            address: " "
        }
    ],
    contact: [
        {
            company_name: company_name1,
            name: " ",
            gender: [enum],
            email: "employee@company.com",
            type: [enum],
        }
    ]
}

codeStatusResponse : 200 OK

if fail:
err.response : 500 error.message



